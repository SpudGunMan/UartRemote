From 69bb9e79772e542079ac2e91515e8aa34d5b1a38 Mon Sep 17 00:00:00 2001
From: Matthew Schinckel <matt@schinckel.net>
Date: Fri, 25 May 2018 21:04:57 +0930
Subject: [PATCH] Use etshal.h from more recent micropython.

---
 boot8266/etshal.h | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/boot8266/etshal.h b/boot8266/etshal.h
index 90af63b..8d64573 100644
--- a/boot8266/etshal.h
+++ b/boot8266/etshal.h
@@ -1,19 +1,19 @@
-#ifndef _INCLUDED_ETSHAL_H_
-#define _INCLUDED_ETSHAL_H_
+#ifndef MICROPY_INCLUDED_ESP8266_ETSHAL_H
+#define MICROPY_INCLUDED_ESP8266_ETSHAL_H
 
 #include <os_type.h>
 
 // see http://esp8266-re.foogod.com/wiki/Random_Number_Generator
 #define WDEV_HWRNG ((volatile uint32_t*)0x3ff20e44)
 
-void ets_delay_us();
+void ets_delay_us(uint16_t us);
 void ets_intr_lock(void);
 void ets_intr_unlock(void);
 void ets_isr_mask(uint32_t mask);
 void ets_isr_unmask(uint32_t mask);
 void ets_isr_attach(int irq_no, void (*handler)(void *), void *arg);
 void ets_install_putc1();
-void uart_div_modify();
+void uart_div_modify(uint8_t uart, uint32_t divisor);
 void ets_set_idle_cb(void (*handler)(void *), void *arg);
 
 void ets_timer_arm_new(os_timer_t *tim, uint32_t millis, bool repeat, bool is_milli_timer);
@@ -33,13 +33,13 @@ void MD5Update(MD5_CTX *context, const void *data, unsigned int len);
 void MD5Final(unsigned char digest[16], MD5_CTX *context);
 
 // These prototypes are for recent SDKs with "malloc tracking"
-void *pvPortMalloc(unsigned sz, const char *fname, int line);
-void *pvPortZalloc(unsigned sz, const char *fname, int line);
-void *pvPortRealloc(void *p, unsigned sz, const char *fname, int line);
-void vPortFree(void *p, const char *fname, int line);
+void *pvPortMalloc(size_t sz, const char *fname, unsigned line);
+void *pvPortZalloc(size_t sz, const char *fname, unsigned line);
+void *pvPortRealloc(void *p, unsigned sz, const char *fname, unsigned line);
+void vPortFree(void *p, const char *fname, unsigned line);
 
 uint32_t SPIRead(uint32_t offset, void *buf, uint32_t len);
 uint32_t SPIWrite(uint32_t offset, const void *buf, uint32_t len);
 uint32_t SPIEraseSector(int sector);
 
-#endif // _INCLUDED_ETSHAL_H_
+#endif // MICROPY_INCLUDED_ESP8266_ETSHAL_H
