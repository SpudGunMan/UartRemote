import ubinascii, uos, machine,uhashlib
from ubinascii import hexlify
b64="""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
"""

def calc_hash(b):
    return hexlify(uhashlib.sha256(b).digest()).decode()

# this is the hash of the compiled uartremote.mpy
hash_gen='fce99b4c972da25980af9ccb5e392340695dd2c4b5b955db8ee8727b19931836'

uartremote=ubinascii.a2b_base64(b64)
hash_initial=calc_hash(uartremote)

try: # remove any old versions of uartremote library
    uos.remove('/projects/uartremote.py')
    uos.remove('/projects/uartremote.mpy')
except OSError:
    pass

print('writing uartremote.mpy to folder /projects')
with open('/projects/uartremote.mpy','wb') as f:
    f.write(uartremote)
print('Finished writing uartremote.mpy.')
print('Checking hash.')
uartremote_check=open('/projects/uartremote.mpy','rb').read()
hash_check=calc_hash(uartremote_check)

print('Hash generated: ',hash_gen)
error=False
if hash_initial != hash_gen:
    print('Failed hash of base64 input : '+hash_initial)
    error=True
if hash_check != hash_gen:
    print('Failed hash of .mpy on SPIKE: '+hash_check)
    error=True

if not error:
    print('Uartremote library written succesfully. Resetting....')
    machine.reset()
else:
    print('Failure in Uartremote library!')

